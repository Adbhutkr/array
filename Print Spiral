For a given two-dimensional integer array/list of size (N x M), print it in a spiral form. That is, you need to print in the order followed for every iteration:
a. First row(left to right)
b. Last column(top to bottom)
c. Last row(right to left)
d. First column(bottom to top)
Sample Input 1:
1
4 4 
1 2 3 4 
5 6 7 8 
9 10 11 12 
13 14 15 16
Sample Output 1:
1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10 

ANS) 
public class Solution {

	public static void spiralPrint(int a[][])
    {
		
		
        int i, srow = 0, scol = 0;
      
         int erow= a.length;
        if(erow ==0)
        {
           return;
        }
        int ecolumn = a[0].length;
        if(ecolumn ==0)
        {
            return;
        }
      if(ecolumn>0)  
	  {

	  
        while (srow < erow && scol < ecolumn)
		 {
            // Print the first row from the remaining rows
            for (i = scol; i < ecolumn; ++i) {
                System.out.print(a[srow][i] + " ");
            }
            srow++;
 
            // Print the last column from the remaining
            // columns
            for (i = srow; i < erow; ++i) {
                System.out.print(a[i][ecolumn - 1] + " ");
            }
            ecolumn--;
 
            // Print the last row from the remaining rows */
            if (srow < erow) {
                for (i = ecolumn - 1; i >= scol; --i) {
                    System.out.print(a[erow - 1][i] + " ");
                }
                erow--;
            }
 
            // Print the first column from the remaining
            // columns */
            if (scol < ecolumn) {
                for (i = erow - 1; i >= srow; --i) {
                    System.out.print(a[i][scol] + " ");
                }
                scol++;
            }
        }
	}
    }
	}
